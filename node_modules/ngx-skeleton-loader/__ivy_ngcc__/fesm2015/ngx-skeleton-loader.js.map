{"version":3,"file":"ngx-skeleton-loader.js","sources":["ngx-skeleton-loader/lib/ngx-skeleton-loader.component.ts","ngx-skeleton-loader/lib/ngx-skeleton-loader.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;MAQa,0BAA0B;AAAG,IAL1C;AACG,QAMD,UAAK,GAAG,CAAC,CAAC;AACZ,QAEE,eAAU,GAAkB,EAAE,CAAC;AACjC,QAEE,cAAS,GAAqD,UAAU,CAAC;AAC3E,QACW,UAAK,GAA4B,EAAE,CAAC;AAC/C,QACE,UAAK,GAAe,EAAE,CAAC;AACzB,KA2BC;AACD;AAAQ;AAAmB;AAAQ,IA3BjC,QAAQ;AACV,QAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;AACxC,QAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AACtC,QACI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC;AAAyB,cAAf,iBAAiB,GAAG,CAAC,UAAU,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,CAAC;AAC7E,QAAI,IAAI,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1D;AACM,YAAA,IAAI,SAAS,EAAE,EAAE;AACvB,gBAAQ,OAAO,CAAC,KAAK,CACX,kEAAkE,iBAAiB,CAAC,IAAI,CACtF,IAAI,CACL,kCAAkC,CACpC,CAAC;AACV,aAAO;AACP,YAAM,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;AAClC,SAAK;AACL,KAAG;AACH;AACO;AACH;AAAQ,IADV,eAAe;AACjB,QAAI,GAAG,CAAC,4BAA4B,CAAC,CAAC;AACtC,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb,QAAI,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACpC,KAAG;AACH;sDA7CC,SAAS,SAAC,kBACT,QAAQ,EAAE,qBAAqB;KAC/B,ybAAyC;;;;k/BAE1C,+uBACG;AAAC;AAA8C,oBAChD,KAAK;AACN,yBAEC,KAAK;AACN,wBAEC,KAAK;AACN,oBAEC,KAAK;AAAI;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAE5B,IAXE,2CACU;AACZ;AAES,IADP,gDAC+B;AACjC;AAES,IADP,+CACyE;AAC3E;AACoB,IAAlB,2CAA6C;AAC/C;AACoB,IAAlB,2CAAuB;AACzB;AACC;AAAC;AAAI;AACmB;AACY;AAIrB;AAAI,MClBP,uBAAuB;AACpC;AAAQ;AAAmB;AAAQ,IAAjC,OAAO,OAAO;AAAK,QACjB,OAAO;AACX,YAAM,QAAQ,EAAE,uBAAuB;AACvC,SAAK,CAAC;AACN,KAAG;AACH;mDAZC,QAAQ,SAAC,kBACR;OAAY,EAAE,CAAC,0BAA0B,CAAC,kBAC1C,OAAO,EAAE,CAAC,YAAY,CAAC,kBACvB,OAAO,EAAE,CAAC,0BAA0B,CAAC,eACtC;;;;;;;;;0BAEG;AAAC;AAAC;AAAI;AACL;AAAiC;AAMyB;AAAI;AAAC;AAAI;AAAkC;AAA0C;AAAsI;AAAI;AAAC;AAAgE","sourcesContent":["import { Component, OnInit, Input, isDevMode, OnDestroy, AfterViewInit } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\n\n@Component({\n  selector: 'ngx-skeleton-loader',\n  templateUrl: './ngx-skeleton-loader.html',\n  styleUrls: ['./ngx-skeleton-loader.scss'],\n})\nexport class NgxSkeletonLoaderComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  count = 1;\n\n  @Input()\n  appearance: 'circle' | '' = '';\n\n  @Input()\n  animation: 'progress' | 'progress-dark' | 'pulse' | 'false' = 'progress';\n\n  @Input() theme: { [k: string]: string } = {};\n\n  items: Array<any> = [];\n\n  ngOnInit() {\n    start('NgxSkeletonLoader:Rendered');\n    start('NgxSkeletonLoader:Loaded');\n\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(this.animation) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(\n          `\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(\n            ', ',\n          )}. Forcing default to \"progress\".`,\n        );\n      }\n      this.animation = 'progress';\n    }\n  }\n\n  ngAfterViewInit() {\n    end('NgxSkeletonLoader:Rendered');\n  }\n\n  ngOnDestroy() {\n    end('NgxSkeletonLoader:Loaded');\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgxSkeletonLoaderComponent } from './ngx-skeleton-loader.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxSkeletonLoaderComponent],\n  imports: [CommonModule],\n  exports: [NgxSkeletonLoaderComponent],\n})\n\nexport class NgxSkeletonLoaderModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n    };\n  }\n}\n"]}