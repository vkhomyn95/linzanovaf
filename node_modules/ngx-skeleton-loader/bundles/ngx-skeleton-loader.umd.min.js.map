{"version":3,"sources":["ng://ngx-skeleton-loader/lib/ngx-skeleton-loader.component.ts","ng://ngx-skeleton-loader/lib/ngx-skeleton-loader.module.ts"],"names":["NgxSkeletonLoaderComponent","this","count","appearance","animation","theme","items","prototype","ngOnInit","start","length","allowedAnimations","indexOf","isDevMode","console","error","join","ngAfterViewInit","end","ngOnDestroy","Component","args","selector","template","Input","NgxSkeletonLoaderModule","forRoot","ngModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"oaAGA,SAAAA,IAOEC,KAAAC,MAAQ,EAGRD,KAAAE,WAA4B,GAG5BF,KAAAG,UAA8D,WAErDH,KAAAI,MAAiC,GAE1CJ,KAAAK,MAAoB,GA4BtB,OA1BEN,EAAAO,UAAAC,SAAA,WACEC,EAAAA,MAAM,8BACNA,EAAAA,MAAM,4BAENR,KAAKK,MAAMI,OAAST,KAAKC,UACnBS,EAAoB,CAAC,WAAY,gBAAiB,QAAS,UACd,IAA/CA,EAAkBC,QAAQX,KAAKG,aAE7BS,EAAAA,aACFC,QAAQC,MACN,gEAAkEJ,EAAkBK,KAClF,MACD,oCAGLf,KAAKG,UAAY,aAIrBJ,EAAAO,UAAAU,gBAAA,WACEC,EAAAA,IAAI,+BAGNlB,EAAAO,UAAAY,YAAA,WACED,EAAAA,IAAI,iDA3CPE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,sBACVC,SAAA,g1DAICC,EAAAA,0BAGAA,EAAAA,yBAGAA,EAAAA,qBAGAA,EAAAA,SA8BHxB,sBC5CA,SAAAyB,KAYA,OALSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,wBATfG,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAAC7B,GACf8B,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAChC,OASZyB","sourcesContent":["import { Component, OnInit, Input, isDevMode, OnDestroy, AfterViewInit } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\n\n@Component({\n  selector: 'ngx-skeleton-loader',\n  templateUrl: './ngx-skeleton-loader.html',\n  styleUrls: ['./ngx-skeleton-loader.scss'],\n})\nexport class NgxSkeletonLoaderComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input()\n  count = 1;\n\n  @Input()\n  appearance: 'circle' | '' = '';\n\n  @Input()\n  animation: 'progress' | 'progress-dark' | 'pulse' | 'false' = 'progress';\n\n  @Input() theme: { [k: string]: string } = {};\n\n  items: Array<any> = [];\n\n  ngOnInit() {\n    start('NgxSkeletonLoader:Rendered');\n    start('NgxSkeletonLoader:Loaded');\n\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(this.animation) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(\n          `\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(\n            ', ',\n          )}. Forcing default to \"progress\".`,\n        );\n      }\n      this.animation = 'progress';\n    }\n  }\n\n  ngAfterViewInit() {\n    end('NgxSkeletonLoader:Rendered');\n  }\n\n  ngOnDestroy() {\n    end('NgxSkeletonLoader:Loaded');\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgxSkeletonLoaderComponent } from './ngx-skeleton-loader.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [NgxSkeletonLoaderComponent],\n  imports: [CommonModule],\n  exports: [NgxSkeletonLoaderComponent],\n})\n\nexport class NgxSkeletonLoaderModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n    };\n  }\n}\n"]}